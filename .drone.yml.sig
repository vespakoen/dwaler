eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2hlY2stZGlmZnM6CiAgICBpbWFnZTogYnJhdmlzc2ltb2xhYnMvYWxwaW5lLWdpdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9kd2FsZXIKICAgICAgLSBnaXQgZGlmZiAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gbGlicy9kd2FsZXItY2xpZW50LyB8fCBlY2hvICJ0cnVlIiA-IGxpYi1kd2FsZXItY2xpZW50X2NoYW5nZWQKICAgICAgIyAtIGdpdCBkaWZmIC0tZXhpdC1jb2RlIC0tbmFtZS1vbmx5ICR7RFJPTkVfUFJFVl9DT01NSVRfU0hBfS4uQCAtLSBhcHBzL2Rlc2t0b3AvIHx8IGVjaG8gInRydWUiID4gYXBwLWRlc2t0b3BfY2hhbmdlZAogICAgICAtIGdpdCBkaWZmIC0tZXhpdC1jb2RlIC0tbmFtZS1vbmx5ICR7RFJPTkVfUFJFVl9DT01NSVRfU0hBfS4uQCAtLSBhcHBzL21vYmlsZS8gfHwgZWNobyAidHJ1ZSIgPiBhcHAtbW9iaWxlX2NoYW5nZWQKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gY2hpcHMvbmFuby8gfHwgZWNobyAidHJ1ZSIgPiBjaGlwLW5hbm9fY2hhbmdlZAojICMgREVTS1RPUCBBUFAKIyAgICMgTE9BRCBDQUNIRQojICAgbG9hZC1hcHAtZGVza3RvcC1jYWNoZToKIyAgICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKIyAgICAgbW91bnQ6CiMgICAgICAgLSBhcHBzL2Rlc2t0b3Avbm9kZV9tb2R1bGVzCiMgICAgIHJlc3RvcmU6IHRydWUKIyAgICAgd2hlbjoKIyAgICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QsIHB1c2ggXQojICAgIyBCVUlMRAojICAgYnVpbGQtYXBwLWRlc2t0b3A6CiMgICAgIGltYWdlOiBub2RlOjYKIyAgICAgZW52aXJvbm1lbnQ6CiMgICAgICAgTlBNX0NPTkZJR19MT0dMRVZFTDogIndhcm4iCiMgICAgICAgTlBNX0NPTkZJR19DT0xPUjogImFsd2F5cyIKIyAgICAgY29tbWFuZHM6CiMgICAgICAgIyAtIGNhdCBhcHAtZGVza3RvcF9jaGFuZ2VkIHx8IGV4aXQgMAojICAgICAgIC0gZHBrZyAtLWFkZC1hcmNoaXRlY3R1cmUgaTM4NgojICAgICAgIC0gd2dldCBodHRwczovL2RsLndpbmVocS5vcmcvd2luZS1idWlsZHMvUmVsZWFzZS5rZXkKIyAgICAgICAtIGFwdC1rZXkgYWRkIFJlbGVhc2Uua2V5CiMgICAgICAgLSBhcHQtZ2V0IHVwZGF0ZSAteQojICAgICAgIC0gYXB0LWdldCBpbnN0YWxsIGFwdC10cmFuc3BvcnQtaHR0cHMKIyAgICAgICAtIGJhc2ggLWMgImVjaG8gJ2RlYiBodHRwczovL2RsLndpbmVocS5vcmcvd2luZS1idWlsZHMvZGViaWFuLyBqZXNzaWUgbWFpbicgPj4gL2V0Yy9hcHQvc291cmNlcy5saXN0IgojICAgICAgIC0gYXB0LWdldCB1cGRhdGUgLXkKIyAgICAgICAtIGFwdC1nZXQgaW5zdGFsbCAteSB3aW5lLWRldmVsCiMgICAgICAgLSBjZCBhcHBzL2Rlc2t0b3AKIyAgICAgICAtIG5wbSBpbnN0YWxsCiMgICAgICAgLSBucG0gdGVzdAojICAgICAgIC0gbnBtIHJ1biBidWlsZAojICAgICAgIC0gbnBtIHJ1biByZWxlYXNlCiMgICAjIFNBVkUgQ0FDSEUKIyAgIHNhdmUtYXBwLWRlc2t0b3AtY2FjaGU6CiMgICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiMgICAgIG1vdW50OgojICAgICAgIC0gYXBwcy9kZXNrdG9wL25vZGVfbW9kdWxlcwojICAgICByZWJ1aWxkOiB0cnVlCiMgICAgIHdoZW46CiMgICAgICAgZXZlbnQ6IFsgcHVzaCBdCgojIEpTIENMSUVOVCBMSUIKICAjIExPQUQgQ0FDSEUKICBsb2FkLWxpYi1kd2FsZXItY2xpZW50LWNhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKICAgIG1vdW50OgogICAgICAtIGxpYnMvZHdhbGVyLWNsaWVudC9ub2RlX21vZHVsZXMKICAgIHJlc3RvcmU6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1bGxfcmVxdWVzdCwgcHVzaCBdCiAgIyBCVUlMRAogIGJ1aWxkLWxpYi1kd2FsZXItY2xpZW50OgogICAgaW1hZ2U6IG5vZGU6NgogICAgZW52aXJvbm1lbnQ6CiAgICAgIE5QTV9DT05GSUdfTE9HTEVWRUw6ICJ3YXJuIgogICAgICBOUE1fQ09ORklHX0NPTE9SOiAiYWx3YXlzIgogICAgY29tbWFuZHM6CiAgICAgICMgLSBjYXQgbGliLWR3YWxlci1jbGllbnRfY2hhbmdlZCB8fCBleGl0IDAKICAgICAgLSBjZCBsaWJzL2R3YWxlci1jbGllbnQKICAgICAgLSBucG0gaW5zdGFsbAogICAgICAtIG5wbSB0ZXN0CiAgICAgIC0gbnBtIHJ1biBidWlsZAogICMgU0FWRSBDQUNIRQogIHNhdmUtbGliLWR3YWxlci1jbGllbnQtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gbGlicy9kd2FsZXItY2xpZW50L25vZGVfbW9kdWxlcwogICAgcmVidWlsZDogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCBdCgojIE5BTk8gQ0hJUAogICMgQlVJTEQKICBidWlsZC1jaGlwLW5hbm86CiAgICBpbWFnZTogdWJ1bnR1OnhlbmlhbAogICAgY29tbWFuZHM6CiAgICAgIC0gYXB0LWdldCB1cGRhdGUgLXkKICAgICAgLSBhcHQtZ2V0IGluc3RhbGwgY3VybCBweXRob24KICAgICAgLSBweXRob24gLWMgIiQoY3VybCAtZnNTTCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcGxhdGZvcm1pby9wbGF0Zm9ybWlvL21hc3Rlci9zY3JpcHRzL2dldC1wbGF0Zm9ybWlvLnB5KSIKICAgICAgLSBwbGF0Zm9ybWlvIC0taGVscAoKIyBNT0JJTEUgQVBQCiAgIyBMT0FEIENBQ0hFCiAgbG9hZC1hcHAtbW9iaWxlLWNhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKICAgIG1vdW50OgogICAgICAtIGFwcHMvbW9iaWxlL25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAjIEJVSUxECiAgYnVpbGQtYXBwLW1vYmlsZToKICAgIGltYWdlOiBub2RlOjYKICAgIGVudmlyb25tZW50OgogICAgICBOUE1fQ09ORklHX0xPR0xFVkVMOiAid2FybiIKICAgICAgTlBNX0NPTkZJR19DT0xPUjogImFsd2F5cyIKICAgIGNvbW1hbmRzOgogICAgICAjIC0gY2F0IGFwcC1tb2JpbGVfY2hhbmdlZCB8fCBleGl0IDAKICAgICAgLSBjZCBhcHBzL21vYmlsZQogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICAgICAgLSBucG0gc3RhcnQgJgogICAgICAtIGN1cmwgImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9pbmRleC5hbmRyb2lkLmJ1bmRsZT9wbGF0Zm9ybT1hbmRyb2lkIiAtbyAiYW5kcm9pZC9hcHAvc3JjL21haW4vYXNzZXRzL2luZGV4LmFuZHJvaWQuYnVuZGxlIgogICMgQ09NUElMRQogIGNvbXBpbGUtYXBwLW1vYmlsZS1hbmRyb2lkOgogICAgaW1hZ2U6IGJlZXZlbG9wL2FuZHJvaWQ6bGF0ZXN0CiAgICBjb21tYW5kczoKICAgICAgLSBjZCBhcHBzL21vYmlsZS9hbmRyb2lkCiAgICAgIC0gLi9ncmFkbGV3IGFzc2VtYmxlUmVsZWFzZQogICAgICAtIGtleXRvb2wgLWdlbmtleSAtdiAta2V5c3RvcmUgbXkta2V5c3RvcmUua2V5c3RvcmUgLWFsaWFzIG5hbWVfYWxpYXMgLWtleWFsZyBSU0EgLXZhbGlkaXR5IDEwMDAwCiAgICAgICMgLSBqYXJzaWduZXIgLXZlcmJvc2UgLWtleXN0b3JlIG15LWtleXN0b3JlLmtleXN0b3JlIDxwYXRoIG9mIGFwaz4gIGFsaWFzX25hbWUKICAgICAgIyAtIHppcGFsaWduIC1mIC12IDQgPHlvdXIuYXBrID4gIDx5b3VyX2FsaWduZWQuYXBrPgogICMgU0FWRSBDQUNIRQogIHNhdmUtYXBwLW1vYmlsZS1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBhcHBzL21vYmlsZS9ub2RlX21vZHVsZXMKICAgIHJlYnVpbGQ6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQoKIyBTTEFDSyBOT1RJRklDQVRJT05TCiAgbm90aWZ5OgogICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2s6bGF0ZXN0CiAgICBjaGFubmVsOiBnZW5lcmFs.vxdrfqx7_Lv25FKSu4oQdSSoiXghEiyz4xLtPdhXINY