eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2hlY2stZGlmZnM6CiAgICBpbWFnZTogYnJhdmlzc2ltb2xhYnMvYWxwaW5lLWdpdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9kd2FsZXIKICAgICAgLSBnaXQgZGlmZiAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gbGlicy9kd2FsZXItY2xpZW50LyB8fCBlY2hvICJ0cnVlIiA-IGxpYi1kd2FsZXItY2xpZW50X2NoYW5nZWQKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gYXBwcy9kZXNrdG9wLyB8fCBlY2hvICJ0cnVlIiA-IGFwcC1kZXNrdG9wX2NoYW5nZWQKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gYXBwcy9tb2JpbGUvIHx8IGVjaG8gInRydWUiID4gYXBwLW1vYmlsZV9jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgJHtEUk9ORV9QUkVWX0NPTU1JVF9TSEF9Li5AIC0tIGNoaXBzL25hbm8vIHx8IGVjaG8gInRydWUiID4gY2hpcC1uYW5vX2NoYW5nZWQKIyBERVNLVE9QIEFQUAogICMgTE9BRCBDQUNIRQogIGxvYWQtYXBwLWRlc2t0b3AtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gYXBwcy9kZXNrdG9wL25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAjIEJVSUxECiAgYnVpbGQtYXBwLWRlc2t0b3A6CiAgICBpbWFnZTogbm9kZTo2CiAgICBlbnZpcm9ubWVudDoKICAgICAgTlBNX0NPTkZJR19MT0dMRVZFTDogIndhcm4iCiAgICAgIE5QTV9DT05GSUdfQ09MT1I6ICJhbHdheXMiCiAgICBjb21tYW5kczoKICAgICAgIyAtIGNhdCBhcHAtZGVza3RvcF9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGRwa2cgLS1hZGQtYXJjaGl0ZWN0dXJlIGkzODYKICAgICAgLSB3Z2V0IGh0dHBzOi8vZGwud2luZWhxLm9yZy93aW5lLWJ1aWxkcy9SZWxlYXNlLmtleQogICAgICAtIGFwdC1rZXkgYWRkIFJlbGVhc2Uua2V5CiAgICAgIC0gYXB0LWdldCB1cGRhdGUgLXkKICAgICAgLSBhcHQtZ2V0IGluc3RhbGwgYXB0LXRyYW5zcG9ydC1odHRwcwogICAgICAtIGJhc2ggLWMgImVjaG8gJ2RlYiBodHRwczovL2RsLndpbmVocS5vcmcvd2luZS1idWlsZHMvZGViaWFuLyBqZXNzaWUgbWFpbicgPj4gL2V0Yy9hcHQvc291cmNlcy5saXN0IgogICAgICAtIGFwdC1nZXQgdXBkYXRlIC15CiAgICAgIC0gYXB0LWdldCBpbnN0YWxsIC15IHdpbmUtZGV2ZWwgd2luZXRyaWNrcyB4dmZiCiAgICAgIC0gY2QgYXBwcy9kZXNrdG9wCiAgICAgIC0gbnBtIGluc3RhbGwKICAgICAgLSBucG0gdGVzdAogICAgICAtIG5wbSBydW4gYnVpbGQKICAgICAgLSBucG0gcnVuIHJlbGVhc2UKICAjIFNBVkUgQ0FDSEUKICBzYXZlLWFwcC1kZXNrdG9wLWNhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKICAgIG1vdW50OgogICAgICAtIGFwcHMvZGVza3RvcC9ub2RlX21vZHVsZXMKICAgIHJlYnVpbGQ6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQoKIyBNT0JJTEUgQVBQCiAgIyBMT0FEIENBQ0hFCiAgbG9hZC1hcHAtbW9iaWxlLWNhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKICAgIG1vdW50OgogICAgICAtIGFwcHMvbW9iaWxlL25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAjIEJVSUxECiAgYnVpbGQtYXBwLW1vYmlsZToKICAgIGltYWdlOiBub2RlOjYKICAgIGVudmlyb25tZW50OgogICAgICBOUE1fQ09ORklHX0xPR0xFVkVMOiAid2FybiIKICAgICAgTlBNX0NPTkZJR19DT0xPUjogImFsd2F5cyIKICAgIGNvbW1hbmRzOgogICAgICAjIC0gY2F0IGFwcC1tb2JpbGVfY2hhbmdlZCB8fCBleGl0IDAKICAgICAgLSBjZCBhcHBzL21vYmlsZQogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICAgICAgLSBucG0gc3RhcnQgJgogICAgICAtIGN1cmwgImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MS9pbmRleC5hbmRyb2lkLmJ1bmRsZT9wbGF0Zm9ybT1hbmRyb2lkIiAtbyAiYW5kcm9pZC9hcHAvc3JjL21haW4vYXNzZXRzL2luZGV4LmFuZHJvaWQuYnVuZGxlIgogICMgQ09NUElMRQogIGNvbXBpbGUtYXBwLW1vYmlsZS1hbmRyb2lkOgogICAgaW1hZ2U6IGJlZXZlbG9wL2FuZHJvaWQ6bGF0ZXN0CiAgICBjb21tYW5kczoKICAgICAgLSBjZCBhcHBzL21vYmlsZS9hbmRyb2lkCiAgICAgIC0gLi9ncmFkbGV3IGFzc2VtYmxlUmVsZWFzZQogICAgICAtIGtleXRvb2wgLWdlbmtleSAtdiAta2V5c3RvcmUgbXkta2V5c3RvcmUua2V5c3RvcmUgLWFsaWFzIG5hbWVfYWxpYXMgLWtleWFsZyBSU0EgLXZhbGlkaXR5IDEwMDAwCiAgICAgICMgLSBqYXJzaWduZXIgLXZlcmJvc2UgLWtleXN0b3JlIG15LWtleXN0b3JlLmtleXN0b3JlIDxwYXRoIG9mIGFwaz4gIGFsaWFzX25hbWUKICAgICAgIyAtIHppcGFsaWduIC1mIC12IDQgPHlvdXIuYXBrID4gIDx5b3VyX2FsaWduZWQuYXBrPgogICMgU0FWRSBDQUNIRQogIHNhdmUtYXBwLW1vYmlsZS1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBhcHBzL21vYmlsZS9ub2RlX21vZHVsZXMKICAgIHJlYnVpbGQ6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQoKIyBKUyBDTElFTlQgTElCCiAgIyBMT0FEIENBQ0hFCiAgbG9hZC1saWItZHdhbGVyLWNsaWVudC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBsaWJzL2R3YWxlci1jbGllbnQvbm9kZV9tb2R1bGVzCiAgICByZXN0b3JlOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdWxsX3JlcXVlc3QsIHB1c2ggXQogICMgQlVJTEQKICBidWlsZC1saWItZHdhbGVyLWNsaWVudDoKICAgIGltYWdlOiBub2RlOjYKICAgIGVudmlyb25tZW50OgogICAgICBOUE1fQ09ORklHX0xPR0xFVkVMOiAid2FybiIKICAgICAgTlBNX0NPTkZJR19DT0xPUjogImFsd2F5cyIKICAgIGNvbW1hbmRzOgogICAgICAjIC0gY2F0IGxpYi1kd2FsZXItY2xpZW50X2NoYW5nZWQgfHwgZXhpdCAwCiAgICAgIC0gY2QgbGlicy9kd2FsZXItY2xpZW50CiAgICAgIC0gbnBtIGluc3RhbGwKICAgICAgLSBucG0gdGVzdAogICAgICAtIG5wbSBydW4gYnVpbGQKICAjIFNBVkUgQ0FDSEUKICBzYXZlLWxpYi1kd2FsZXItY2xpZW50LWNhY2hlOgogICAgaW1hZ2U6IHBsdWdpbnMvc2Z0cC1jYWNoZTpsYXRlc3QKICAgIG1vdW50OgogICAgICAtIGxpYnMvZHdhbGVyLWNsaWVudC9ub2RlX21vZHVsZXMKICAgIHJlYnVpbGQ6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2ggXQoKIyBOQU5PIENISVAKICAjIEJVSUxECiAgYnVpbGQtY2hpcC1uYW5vOgogICAgaW1hZ2U6IHVidW50dTp4ZW5pYWwKICAgIGNvbW1hbmRzOgogICAgICAtIGFwdC1nZXQgdXBkYXRlIC15ICYmIGFwdC1nZXQgaW5zdGFsbCBjdXJsIHB5dGhvbgogICAgICAtIHB5dGhvbiAtYyAiJChjdXJsIC1mc1NMIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9wbGF0Zm9ybWlvL3BsYXRmb3JtaW8vbWFzdGVyL3NjcmlwdHMvZ2V0LXBsYXRmb3JtaW8ucHkpIgogICAgICAtIHBsYXRmb3JtaW8gLS1oZWxwCgojIFNMQUNLIE5PVElGSUNBVElPTlMKICBub3RpZnk6CiAgICBpbWFnZTogcGx1Z2lucy9zbGFjazpsYXRlc3QKICAgIGNoYW5uZWw6IGdlbmVyYWw.xW_cLTBKWv-wxV29xRkFD-TOzG2u-34Br8iAKV3mFnY