eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2hlY2stZGlmZnM6CiAgICBpbWFnZTogYnJhdmlzc2ltb2xhYnMvYWxwaW5lLWdpdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgL2Ryb25lL3NyYy9naXRodWIuY29tL3Zlc3Bha29lbi9kd2FsZXIKICAgICAgLSBnaXQgZGlmZiAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gbGlicy9kd2FsZXItY2xpZW50LyB8fCBlY2hvICJ0cnVlIiA-IGxpYi1kd2FsZXItY2xpZW50X2NoYW5nZWQKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gYXBwcy9kZXNrdG9wLyB8fCBlY2hvICJ0cnVlIiA-IGFwcC1kZXNrdG9wX2NoYW5nZWQKICAgICAgLSBnaXQgZGlmZiAtLWV4aXQtY29kZSAtLW5hbWUtb25seSAke0RST05FX1BSRVZfQ09NTUlUX1NIQX0uLkAgLS0gYXBwcy9tb2JpbGUvIHx8IGVjaG8gInRydWUiID4gYXBwLW1vYmlsZV9jaGFuZ2VkCiAgICAgIC0gZ2l0IGRpZmYgLS1leGl0LWNvZGUgLS1uYW1lLW9ubHkgJHtEUk9ORV9QUkVWX0NPTU1JVF9TSEF9Li5AIC0tIGNoaXBzL25hbm8vIHx8IGVjaG8gInRydWUiID4gY2hpcC1uYW5vX2NoYW5nZWQKIyBERVNLVE9QIEFQUAogICMgTE9BRCBDQUNIRQogIGxvYWQtYXBwLWRlc2t0b3AtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gYXBwcy9kZXNrdG9wL25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAjIEJVSUxECiAgYnVpbGQtYXBwLWRlc2t0b3A6CiAgICBpbWFnZTogbm9kZTo2CiAgICBlbnZpcm9ubWVudDoKICAgICAgTlBNX0NPTkZJR19MT0dMRVZFTDogIndhcm4iCiAgICAgIE5QTV9DT05GSUdfQ09MT1I6ICJhbHdheXMiCiAgICBjb21tYW5kczoKICAgICAgIyAtIGNhdCBhcHAtZGVza3RvcF9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGNkIGFwcHMvZGVza3RvcAogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICAgICAgLSBucG0gcnVuIGJ1aWxkCiAgICAgIC0gbnBtIHJ1biByZWxlYXNlCiAgIyBTQVZFIENBQ0hFCiAgc2F2ZS1hcHAtZGVza3RvcC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBhcHBzL2Rlc2t0b3Avbm9kZV9tb2R1bGVzCiAgICByZWJ1aWxkOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0KCiMgTU9CSUxFIEFQUAogICMgTE9BRCBDQUNIRQogIGxvYWQtYXBwLW1vYmlsZS1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBhcHBzL21vYmlsZS9ub2RlX21vZHVsZXMKICAgIHJlc3RvcmU6IHRydWUKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1bGxfcmVxdWVzdCwgcHVzaCBdCiAgIyBCVUlMRAogIGJ1aWxkLWFwcC1tb2JpbGU6CiAgICBpbWFnZTogbm9kZTo2CiAgICBlbnZpcm9ubWVudDoKICAgICAgTlBNX0NPTkZJR19MT0dMRVZFTDogIndhcm4iCiAgICAgIE5QTV9DT05GSUdfQ09MT1I6ICJhbHdheXMiCiAgICBjb21tYW5kczoKICAgICAgIyAtIGNhdCBhcHAtbW9iaWxlX2NoYW5nZWQgfHwgZXhpdCAwCiAgICAgIC0gY2QgYXBwcy9tb2JpbGUKICAgICAgLSBucG0gaW5zdGFsbAogICAgICAtIG5wbSB0ZXN0CiAgICAgIC0gbnBtIHN0YXJ0ICYKICAgICAgLSBjdXJsICJodHRwOi8vbG9jYWxob3N0OjgwODEvaW5kZXguYW5kcm9pZC5idW5kbGU_cGxhdGZvcm09YW5kcm9pZCIgLW8gImFuZHJvaWQvYXBwL3NyYy9tYWluL2Fzc2V0cy9pbmRleC5hbmRyb2lkLmJ1bmRsZSIKICAjIENPTVBJTEUKICBjb21waWxlLWFwcC1tb2JpbGUtYW5kcm9pZDoKICAgIGltYWdlOiBiZWV2ZWxvcC9hbmRyb2lkOmxhdGVzdAogICAgY29tbWFuZHM6CiAgICAgIC0gY2QgYXBwcy9tb2JpbGUvYW5kcm9pZAogICAgICAtIC4vZ3JhZGxldyBhc3NlbWJsZVJlbGVhc2UKICAgICAgLSBrZXl0b29sIC1nZW5rZXkgLXYgLWtleXN0b3JlIG15LWtleXN0b3JlLmtleXN0b3JlIC1hbGlhcyBuYW1lX2FsaWFzIC1rZXlhbGcgUlNBIC12YWxpZGl0eSAxMDAwMAogICAgICAjIC0gamFyc2lnbmVyIC12ZXJib3NlIC1rZXlzdG9yZSBteS1rZXlzdG9yZS5rZXlzdG9yZSA8cGF0aCBvZiBhcGs-ICBhbGlhc19uYW1lCiAgICAgICMgLSB6aXBhbGlnbiAtZiAtdiA0IDx5b3VyLmFwayA-ICA8eW91cl9hbGlnbmVkLmFwaz4KICAjIFNBVkUgQ0FDSEUKICBzYXZlLWFwcC1tb2JpbGUtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gYXBwcy9tb2JpbGUvbm9kZV9tb2R1bGVzCiAgICByZWJ1aWxkOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0KCiMgSlMgQ0xJRU5UIExJQgogICMgTE9BRCBDQUNIRQogIGxvYWQtbGliLWR3YWxlci1jbGllbnQtY2FjaGU6CiAgICBpbWFnZTogcGx1Z2lucy9zZnRwLWNhY2hlOmxhdGVzdAogICAgbW91bnQ6CiAgICAgIC0gbGlicy9kd2FsZXItY2xpZW50L25vZGVfbW9kdWxlcwogICAgcmVzdG9yZTogdHJ1ZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVsbF9yZXF1ZXN0LCBwdXNoIF0KICAjIEJVSUxECiAgYnVpbGQtbGliLWR3YWxlci1jbGllbnQ6CiAgICBpbWFnZTogbm9kZTo2CiAgICBlbnZpcm9ubWVudDoKICAgICAgTlBNX0NPTkZJR19MT0dMRVZFTDogIndhcm4iCiAgICAgIE5QTV9DT05GSUdfQ09MT1I6ICJhbHdheXMiCiAgICBjb21tYW5kczoKICAgICAgIyAtIGNhdCBsaWItZHdhbGVyLWNsaWVudF9jaGFuZ2VkIHx8IGV4aXQgMAogICAgICAtIGNkIGxpYnMvZHdhbGVyLWNsaWVudAogICAgICAtIG5wbSBpbnN0YWxsCiAgICAgIC0gbnBtIHRlc3QKICAgICAgLSBucG0gcnVuIGJ1aWxkCiAgIyBTQVZFIENBQ0hFCiAgc2F2ZS1saWItZHdhbGVyLWNsaWVudC1jYWNoZToKICAgIGltYWdlOiBwbHVnaW5zL3NmdHAtY2FjaGU6bGF0ZXN0CiAgICBtb3VudDoKICAgICAgLSBsaWJzL2R3YWxlci1jbGllbnQvbm9kZV9tb2R1bGVzCiAgICByZWJ1aWxkOiB0cnVlCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0KCiMgTkFOTyBDSElQCiAgIyBCVUlMRAogIGJ1aWxkLWNoaXAtbmFubzoKICAgIGltYWdlOiB1YnVudHU6eGVuaWFsCiAgICBjb21tYW5kczoKICAgICAgLSBhcHQtZ2V0IHVwZGF0ZSAteSAmJiBhcHQtZ2V0IGluc3RhbGwgY3VybCBweXRob24KICAgICAgLSBweXRob24gLWMgIiQoY3VybCAtZnNTTCBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vcGxhdGZvcm1pby9wbGF0Zm9ybWlvL21hc3Rlci9zY3JpcHRzL2dldC1wbGF0Zm9ybWlvLnB5KSIKICAgICAgLSBwbGF0Zm9ybWlvIC0taGVscAoKIyBTTEFDSyBOT1RJRklDQVRJT05TCiAgbm90aWZ5OgogICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2s6bGF0ZXN0CiAgICBjaGFubmVsOiBnZW5lcmFs.SeNF6YQopwrx0AukjC5WkNlLfAuftlBZ6UZWi697gAA